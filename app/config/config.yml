imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    assetic.filter.compass.images_dir: %kernel.root_dir%/../web/images
    assetic.filter.compass.http_path: /images
    app.path.product_images: /images

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~
        sass:
            bin: /Users/walid/.rvm/gems/ruby-2.2.2/bin/sass
        compass:
            bin: /Users/walid/.rvm/gems/ruby-2.2.2/bin/compass

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.project_dir%/var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }


fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
          address:        test@test.fr
          sender_name:    Contact

#Gaufrette
knp_gaufrette:
    stream_wrapper: ~

    adapters:
        image_adapter:
            local:
                directory: '%kernel.root_dir%/../web/images'

    filesystems:
            image_fs:
                adapter:   image_adapter

#Vich
vich_uploader:
    db_driver: orm
    storage:   gaufrette

    mappings:
        image:
            uri_prefix:         '%app.path.product_images%'
            upload_destination: image_fs

#LiipImagine
liip_imagine:
    resolvers:
       default:
          web_path:
              web_root: "%kernel.root_dir%/../web"
              cache_prefix: "cache"
    loaders:
        default:
            filesystem:
                data_root: "%kernel.root_dir%/../web/"
    driver:   gd
    cache:    default
    data_loader: default
    default_image: null
    controller:
        filter_action:          liip_imagine.controller:filterAction
        filter_runtime_action:  liip_imagine.controller:filterRuntimeAction
    filter_sets:
        cache: ~
        thumb_42x42:
            quality: 100
            filters:
                thumbnail: { size: [42, 42], mode: outbound, allow_upscale: true }

easy_admin:
    site_name: '<img src="http://127.0.0.1:8000/images/logo2.png" />'
    formats:
            date: 'd/m/Y'
            time: 'H:i'
            datetime: 'd/m/Y H:i:s'
    entities:
        User:
            class: AppBundle\Entity\User
            label: 'Utilisateur'
            list:
                title: "Tous les utilisateurs"
                fields: ['id', { property: 'imageName', label: 'Image', type: 'image',base_path: '%app.path.product_images%' }, { property: 'username', label: 'Username' }, { property: 'email', type: 'email' }, { property: 'role', label: 'Rôle' }, { property: 'enabled', label: 'Activé' }]
            form:
                title: 'Modifier un utilisateur'
                fields:
                    - { type: 'group', label: "Information à propos de l'utilisateur", css_class: 'col-sm-12', icon: 'user',
                        help: '', css_class: 'danger' }
                    - { property: 'username', label: 'Pseudo' }
                    - { property: 'email', type: 'email' }
                    - { property: 'password', label: 'Mot de passe' }
                    - { type: 'group', label: 'Information complémentaire', css_class: 'col-sm-12', icon: 'user',
                        help: 'Ajoutez un rôle (Admin, Ajouteur)', css_class: 'danger' }
                    - { property: 'roles', label: 'Role' }
                    - { property: 'imageFile', label: 'Image',type: 'vich_image'}

    design:
            brand_color: '#333'
            color_scheme: 'light'
            menu:
                - { entity: 'User', icon: 'users' }

    list:
        actions:
            - { name: 'edit', icon: 'pencil' }
            - { name: 'delete', icon: 'remove' }

lexik_jwt_authentication:
    private_key_path: '%jwt_private_key_path%'
    public_key_path:  '%jwt_public_key_path%'
    pass_phrase:      '%jwt_key_pass_phrase%'
    token_ttl:        '%jwt_token_ttl%'

#token_extractors:
#    authorization_header:      # look for a token as Authorization Header
#        enabled: true
#        prefix:  Bearer
#        name:    Authorization
#    cookie:                    # check token in a cookie
#        enabled: false
#        name:    BEARER
#    query_parameter:           # check token in query string parameter
#        enabled: false
#        name:    bearer